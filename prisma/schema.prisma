// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

model Role {
  id         Int     @id @default(autoincrement())
  name       String
  is_deleted Boolean @default(false)

  created_at DateTime    @default(now()) @db.Timestamp(6)
  updated_at DateTime    @default(now()) @db.Timestamp(6)
  User       AdminUser[]

  @@map("role")
}

model Setting {
  id         Int          @id @default(autoincrement())
  group      SettingEnums @default(BANNER)
  key        String
  value      String       @db.LongText
  lang_id    Int?         @default(1)
  is_deleted Boolean      @default(false)
  is_enabled Boolean      @default(false)

  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)

  Language Language? @relation(fields: [lang_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([lang_id])
  @@map("setting")
}

model AdminUser {
  id         Int     @id @default(autoincrement())
  name       String
  password   String
  email      String  @unique
  role_id    Int
  is_deleted Boolean @default(false)

  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)

  Role Role @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  Post         Category[]
  Event        Event[]
  CategoryView CategoryView[]
  CMS          CMS[]
  Coupon       Coupon[]

  @@index([role_id])
  @@map("admin_user")
}

model Language {
  id         Int           @id @default(autoincrement())
  name       String
  code       String
  dir        LanguageEnums @default(ltr)
  is_default Boolean       @default(false)
  is_deleted Boolean       @default(false)

  created_at          DateTime              @default(now()) @db.Timestamp(6)
  updated_at          DateTime              @default(now()) @db.Timestamp(6)
  CharityDescription  CharityDescription[]
  CategoryDescription CategoryDescription[]
  EventDescription    EventDescription[]
  EventFAQ            EventFAQ[]
  Setting             Setting[]
  CMSDescription      CMSDescription[]

  @@map("language")
}

model Charity {
  id         Int     @id @default(autoincrement())
  price      Int
  thumb      String
  is_deleted Boolean @default(false)

  created_at         DateTime             @default(now()) @db.Timestamp(6)
  updated_at         DateTime             @default(now()) @db.Timestamp(6)
  CharityDescription CharityDescription[]
  Event              Event[]

  @@map("charity")
}

model CharityDescription {
  id         Int      @id @default(autoincrement())
  name       String
  desc       String?  @db.LongText
  lang_id    Int
  charity_id Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)

  Charity  Charity  @relation(fields: [charity_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Language Language @relation(fields: [lang_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  // @@index([charity_id, lang_id])
  @@map("charity_description")
}

model Coupon {
  id            Int           @id @default(autoincrement())
  user_id       Int
  name          String
  coupon_code   String        @unique @db.VarChar(6)
  discount      Int
  coupon_limit  Int?
  is_percentage Boolean       @default(false)
  is_limited    Boolean       @default(false)
  is_enabled    Boolean       @default(false)
  is_deleted    Boolean       @default(false)
  start_date    DateTime?
  end_date      DateTime?
  created_at    DateTime      @default(now()) @db.Timestamp(6)
  updated_at    DateTime      @default(now()) @db.Timestamp(6)
  User          AdminUser     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  CouponApply   CouponApply[]

  @@index([user_id])
  @@map("coupon")
}

model CouponApply {
  id            Int      @id @default(autoincrement())
  customer_id   Int
  cart_id       Int
  coupon_id     Int
  discount      Int
  is_percentage Boolean  @default(false)
  is_deleted    Boolean  @default(false)
  created_at    DateTime @default(now()) @db.Timestamp(6)
  updated_at    DateTime @default(now()) @db.Timestamp(6)
  Customer      Customer @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Cart          Cart     @relation(fields: [cart_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Coupon        Coupon   @relation(fields: [coupon_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([customer_id, cart_id, coupon_id])
  @@map("coupon_apply")
}

model Category {
  id         Int      @id @default(autoincrement())
  thumb      String
  user_id    Int
  is_deleted Boolean  @default(false)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)

  User                AdminUser             @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Event               Event[]
  CategoryDescription CategoryDescription[]

  @@index([user_id])
  @@map("category")
}

model CategoryDescription {
  id          Int      @id @default(autoincrement())
  name        String
  desc        String?  @db.LongText
  lang_id     Int
  category_id Int
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)

  Category Category @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Language Language @relation(fields: [lang_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([category_id, lang_id])
  @@map("category_description")
}

model Event {
  id                Int      @id @default(autoincrement())
  thumb             String
  video_src         String
  price             Int
  cash_alt          Int?
  total_tickets     Int
  tickets_sold      Int?     @default(0)
  user_ticket_limit Int
  is_cash_alt       Boolean  @default(false)
  is_enabled        Boolean  @default(false)
  is_featured       Boolean  @default(false)
  user_id           Int
  category_id       Int
  charity_id        Int
  launch_date       DateTime @default(now()) @db.Timestamp(6)
  end_date          DateTime @default(now()) @db.Timestamp(6)
  created_at        DateTime @default(now()) @db.Timestamp(6)
  updated_at        DateTime @default(now()) @db.Timestamp(6)
  is_deleted        Boolean  @default(false)

  User              AdminUser           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Category          Category            @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Charity           Charity             @relation(fields: [charity_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  EventImages       EventImage[]
  EventFAQs         EventFAQ[]
  EventDescription  EventDescription[]
  OrderEvent        OrderEvent[]
  OrderSubscription OrderSubscription[]
  Winner            Winner[]
  CartItem          CartItem[]

  @@index([user_id, category_id])
  @@map("event")
}

model EventDescription {
  id           Int      @id @default(autoincrement())
  name         String
  desc         String?  @db.LongText
  comp_details String?
  lang_id      Int
  event_id     Int
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)

  Event    Event    @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Language Language @relation(fields: [lang_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([event_id, lang_id])
  @@map("event_description")
}

model EventImage {
  id         Int     @id @default(autoincrement())
  thumb      String
  event_id   Int
  is_deleted Boolean @default(false)

  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)

  Event Event @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([event_id])
  @@map("event_image")
}

model EventFAQ {
  id         Int     @id @default(autoincrement())
  question   String
  answer     String  @db.LongText
  lang_id    Int
  event_id   Int
  is_deleted Boolean @default(false)

  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)

  Event    Event    @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Language Language @relation(fields: [lang_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([event_id, lang_id])
  @@map("event_faq")
}

model Customer {
  id                Int                 @id @default(autoincrement())
  email             String              @unique
  username          String              @unique
  password          String
  is_approved       Boolean             @default(false)
  otp               String              @default("")
  first_name        String
  profile_pic       String?
  last_name         String
  total_customer_id String?             @db.LongText
  dob               DateTime?
  is_deleted        Boolean             @default(false)
  is_verified       Boolean             @default(false)
  is_disabled       Boolean             @default(false)
  created_at        DateTime            @default(now()) @db.Timestamp(6)
  updated_at        DateTime            @default(now()) @db.Timestamp(6)
  Order             Order[]
  CustomerAddress   CustomerAddress[]
  OrderSubscription OrderSubscription[]
  Winner            Winner[]
  Cart              Cart[]
  CouponApply       CouponApply[]
  DeleteRequest     DeleteRequest[]
  OrderEvent        OrderEvent[]

  @@map("customer")
}

model DeleteRequest {
  id          Int      @id @default(autoincrement())
  customer_id Int
  reason      String?  @db.LongText
  comment     String?  @db.LongText
  is_deleted  Boolean? @default(false)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  Customer    Customer @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([customer_id])
  @@map("delete_request")
}

model CustomerAddress {
  id               Int     @id @default(autoincrement())
  customer_id      Int
  street_address_1 String?
  street_address_2 String?
  country          String?
  state            String?
  city             String?
  phone_number     String?
  postal_code      Int?
  is_deleted       Boolean @default(false)

  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)

  Customer Customer @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([customer_id])
  @@map("customer_address")
}

model Cart {
  id          Int     @id @default(autoincrement())
  customer_id Int
  is_deleted  Boolean @default(false)

  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)

  Customer    Customer      @relation(fields: [customer_id], references: [id])
  CartItems   CartItem[]
  CouponApply CouponApply[]

  @@index([customer_id])
  @@map("cart")
}

model CartItem {
  id                Int                @id @default(autoincrement())
  cart_id           Int
  event_id          Int
  quantity          Int
  is_subscribe      Boolean            @default(false)
  subscription_type SubscriptionEnums?
  is_deleted        Boolean            @default(false)

  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)

  Cart  Cart  @relation(fields: [cart_id], references: [id])
  Event Event @relation(fields: [event_id], references: [id])

  @@index([cart_id, event_id])
  @@map("cart_item")
}

model Order {
  id               Int        @id @default(autoincrement())
  sub_total_amount Float
  discount_amount  Float
  total_amount     Float
  status           OrderEnums @default(pending)
  first_name       String
  parent_order_id  Int?
  customer_id      Int
  total_payment_id String
  last_name        String
  email            String
  dob              DateTime
  street_address   String
  apartment        String?
  country          String
  state            String
  city             String
  phone_number     String
  postal_code      String
  is_deleted       Boolean    @default(false)

  Customer    Customer @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ParentOrder Order?   @relation(name: "ParentOrder", fields: [parent_order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  created_at        DateTime            @default(now()) @db.Timestamp(6)
  updated_at        DateTime            @default(now()) @db.Timestamp(6)
  OrderEvent        OrderEvent[]
  Order             Order[]             @relation("ParentOrder")
  OrderSubscription OrderSubscription[]

  @@index([customer_id])
  @@map("order")
}

model OrderEvent {
  id           Int     @id @default(autoincrement())
  order_id     Int
  event_id     Int
  customer_id  Int
  ticket_price Int
  quantity     Int
  is_subscribe Boolean @default(false)
  is_deleted   Boolean @default(false)

  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)

  Order    Order    @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Event    Event    @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Customer Customer @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([order_id, event_id])
  @@map("order_event")
}

model OrderSubscription {
  id                    Int                @id @default(autoincrement())
  ticket_price          Int
  quantity              Int
  customer_id           Int
  order_id              Int
  event_id              Int
  total_subscription_id String?
  subscription_type     SubscriptionEnums? @default(weekly)
  is_deleted            Boolean            @default(false)

  next_date  DateTime @default(now()) @db.Timestamp(6)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)

  Customer Customer @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Order    Order    @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Event    Event    @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([customer_id, order_id, event_id])
  @@map("order_subscription")
}

model Winner {
  id          Int     @id @default(autoincrement())
  customer_id Int
  event_id    Int
  ticket_num  Int
  is_cash_alt Boolean @default(false)
  is_enabled  Boolean @default(false)
  is_deleted  Boolean @default(false)

  draw_date  DateTime? @default(now()) @db.Timestamp(6)
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)

  Customer Customer @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Event    Event    @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([customer_id, event_id])
  @@map("winner")
}

model CMS {
  id         Int      @id @default(autoincrement())
  user_id    Int
  slug       String
  type       CMSEnums @default(static)
  is_deleted Boolean  @default(false)

  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)

  User           AdminUser        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  CMSDescription CMSDescription[]

  @@index([user_id])
  @@map("cms")
}

model CMSDescription {
  id            Int     @id @default(autoincrement())
  cms_id        Int
  title         String
  desc          String
  meta_keywords String
  lang_id       Int
  content       String  @db.LongText
  is_deleted    Boolean @default(false)

  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)

  CMS      CMS      @relation(fields: [cms_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Language Language @relation(fields: [lang_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([lang_id])
  @@map("cms_description")
}

view BannerView {
  id          Int          @unique
  group       SettingEnums
  key         String
  thumb       String
  value       String
  title       String?
  model       String?
  link        String?
  date        String?
  description String?
  price       String?
  name        String?
  lang_id     Int
  is_deleted  Boolean
  is_enabled  Boolean

  created_at DateTime
  updated_at DateTime

  @@map("banner_view")
}

view EventView {
  id                Int     @id @default(autoincrement())
  thumb             String
  name              String
  desc              String? @db.LongText
  comp_details      String?
  video_src         String?
  price             Int
  cash_alt          Int?
  total_tickets     Int
  tickets_sold      Int
  user_ticket_limit Int
  lang_id           Int
  is_cash_alt       Boolean @default(false)
  is_enabled        Boolean @default(false)
  is_featured       Boolean @default(false)

  category_id Int

  launch_date DateTime? @default(now()) @db.Timestamp(6)
  end_date    DateTime? @default(now()) @db.Timestamp(6)
  is_deleted  Boolean   @default(false)

  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)

  @@index([category_id])
  @@map("event_view")
}

view CategoryView {
  id         Int      @id @default(autoincrement())
  thumb      String
  user_id    Int
  lang_id    Int
  name       String
  desc       String?  @db.LongText
  is_deleted Boolean  @default(false)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)

  User AdminUser @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("category_view")
}

enum SettingEnums {
  BANNER
  WONDER
  PAYMENT
}

enum LanguageEnums {
  rtl
  ltr
}

enum SubscriptionEnums {
  weekly
  monthly
  quarterly
}

enum CMSEnums {
  faqs
  static
}

enum OrderEnums {
  pending
  paid
  rejected
}

enum CouponEnums {
  percentage
  fixed
}

// Tables

// Front tables
//1- Customers
//2- Categories
//3- Charity
//3- Events
//3- Event Images
//3- Events FAQs 
//4- Orders
//4- Orders Details
//5- Coupons

// Admin tables
//7- Users
//8- Roles
//9- Resource
//10- Roles Permissions
//11- Settings?
//12- CMS
//6- FAQs
